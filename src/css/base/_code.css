:root {
  --font-family-code: monospace;
  --color-code-text-selection: #b3d4fc;
}

/* 
Begin heavily modified version of Prism
*/
/* Be sure to compare diff when updating to ensure manual changes are kept */
/* PrismJS 1.29.0
https://prismjs.com/download.html#themes=prism&languages=markup+css+clike+javascript+bash+css-extras+markdown+sass+scss+shell-session */
/**
 * prism.js default theme for JavaScript, CSS and HTML
 * Based on dabblet (http://dabblet.com)
 * @author Lea Verou
 */

/* Removed code[class*="language-"] everywhere to avoid issues */
code,
pre {
  color: var(--color-text-primary);
  background: none;
  /* text-shadow: 0 1px white; */
  font-family: var(--font-family-code);

  text-align: left;
  white-space: pre-wrap; /* was `pre` but I want the code to wrap */
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;

  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre::-moz-selection,
pre ::-moz-selection,
code::-moz-selection,
code ::-moz-selection {
  text-shadow: none;
  background: var(--color-code-text-selection);
}

pre::selection,
pre ::selection,
code::selection,
code ::selection {
  text-shadow: none;
  background: var(--color-code-text-selection);
}

@media print {
  code,
  pre {
    text-shadow: none;
  }
}

/* Code blocks */
pre {
  padding: var(--space-m);
  margin: var(--space-s) 0;
  overflow: scroll;
  max-width: 100%;
  font-size: var(--step--1);
}

:not(pre) > code,
pre {
  background: var(--color-swatch-code);
}

/* Inline code */
:not(pre) > code {
  padding: 0.3em 0.2em;
  border-radius: 0.3em;
  white-space: normal;
  font-size: smaller;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}

.token.punctuation {
  color: #999;
}

.token.namespace {
  opacity: 0.7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #905;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #9a6e3a;
  /* This background color was intended by the author of this theme. */
  /* background: hsla(0, 0%, 100%, 0.5); */
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a;
}

.token.function,
.token.class-name {
  color: #dd4a68;
}

.token.regex,
.token.important,
.token.variable {
  color: #e90;
}

.token.important,
.token.bold {
  font-weight: bold;
}
.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

/* Show the code language in the top-right corner of a codeblock */
pre {
  /* So the ::before content can be placed absolute */
  position: relative;
}
pre[class*="language-"]:before {
  position: absolute;
  z-index: 3;
  top: 0.8em;
  right: 1em;
  font-size: 0.75rem;
  color: var(--color-text-quaternary);
}

pre[class~="language-js"]:before {
  content: "js";
}

pre[class~="language-jsx"]:before {
  content: "jsx";
}

pre[class~="language-ts"]:before {
  content: "ts";
}

pre[class~="language-html"]:before {
  content: "html";
}

pre[class~="language-md"]:before {
  content: "md";
}

pre[class~="language-vue"]:before {
  content: "vue";
}

pre[class~="language-css"]:before {
  content: "css";
}

pre[class~="language-sass"]:before {
  content: "sass";
}

pre[class~="language-scss"]:before {
  content: "scss";
}

pre[class~="language-less"]:before {
  content: "less";
}

pre[class~="language-stylus"]:before {
  content: "stylus";
}

pre[class~="language-go"]:before {
  content: "go";
}

pre[class~="language-java"]:before {
  content: "java";
}

pre[class~="language-c"]:before {
  content: "c";
}

pre[class~="language-bash"]:before,
pre[class~="language-shell"]:before,
pre[class~="language-sh"]:before {
  content: "sh";
}

pre[class~="language-yaml"]:before {
  content: "yaml";
}

pre[class~="language-py"]:before {
  content: "py";
}

pre[class~="language-docker"]:before {
  content: "docker";
}

pre[class~="language-dockerfile"]:before {
  content: "dockerfile";
}

pre[class~="language-makefile"]:before {
  content: "makefile";
}

pre[class~="language-javascript"]:before {
  content: "js";
}

pre[class~="language-typescript"]:before {
  content: "ts";
}

pre[class~="language-markup"]:before {
  content: "html";
}

pre[class~="language-markdown"]:before {
  content: "md";
}

pre[class~="language-json"]:before {
  content: "json";
}

pre[class~="language-ruby"]:before {
  content: "rb";
}

pre[class~="language-python"]:before {
  content: "py";
}

pre[class~="language-php"]:before {
  content: "php";
}
